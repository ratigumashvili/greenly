generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id                    String               @id @default(uuid())
  email                 String               @unique
  name                  String
  userName              String               @unique
  password              String?
  isAdmin               Boolean              @default(false)
  institution           String?
  department            String?
  disciplines           String?
  fields                String?
  interests             String?
  about                 String?
  createdAt             DateTime             @default(now())
  createdSubcommunities Subcommunity[]
  SubcommunityMember    SubcommunityMember[]
  Post                  Post[]
}

model Subcommunity {
  id          String   @id @default(uuid())
  name        String   @unique
  description String?
  views       Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  userEmail String?
  User      User?   @relation(fields: [userEmail], references: [email])

  tags    SubcommunityTag[]
  members SubcommunityMember[]
  Post    Post[]
}

model Tag {
  id   String @id @default(uuid())
  name String @unique

  subcommunities SubcommunityTag[]
}

model SubcommunityTag {
  subcommunityId String
  tagId          String

  subcommunity Subcommunity @relation(fields: [subcommunityId], references: [id])
  tag          Tag          @relation(fields: [tagId], references: [id])

  @@id([subcommunityId, tagId])
}

model SubcommunityMember {
  userId         String
  subcommunityId String
  role           String @default("member")

  user         User         @relation(fields: [userId], references: [id], onDelete: Restrict)
  subcommunity Subcommunity @relation(fields: [subcommunityId], references: [id], onDelete: Cascade)

  @@id([userId, subcommunityId])
}

model Post {
  id      String   @id @default(uuid())
  title   String
  content Json?
  files   String[] @default([])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  authorId       String
  subcommunityId String
  author         User         @relation(fields: [authorId], references: [id], onDelete: Cascade)
  subcommunity   Subcommunity @relation(fields: [subcommunityId], references: [id], onDelete: Cascade)
}
